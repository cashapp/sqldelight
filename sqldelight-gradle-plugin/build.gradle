apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'java-gradle-plugin'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

test {
  systemProperty 'compileSdkVersion', rootProject.ext.compileSdkVersion
  systemProperty 'buildToolsVersion', rootProject.ext.buildToolsVersion

  testLogging {
    events "passed", "skipped", "failed"
    exceptionFormat "full"
    showExceptions true
    showStackTraces true
    showCauses true
  }
}

configurations {
  fixtureClasspath
}

// Append any extra dependencies to the test fixtures via a custom configuration classpath. This
// allows us to apply additional plugins in a fixture while still leveraging dependency resolution
// and de-duplication semantics.
def metadata = tasks.getByName('pluginUnderTestMetadata')
metadata.setPluginClasspath(metadata.getPluginClasspath() + configurations.fixtureClasspath)

dependencies {
  compileOnly gradleApi()
  compile project(':sqldelight-compiler')
  compile dep.kotlinStdLib
  compile dep.androidPlugin

  testCompile dep.junit
  testCompile dep.truth

  fixtureClasspath "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.ext.kotlinVersion}"
  fixtureClasspath "com.neenbedankt.gradle.plugins:android-apt:1.4"
  fixtureClasspath "me.tatarka:gradle-retrolambda:3.3.0"
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
