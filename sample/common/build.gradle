plugins {
  alias(deps.plugins.kotlin.multiplatform)
  alias(deps.plugins.kotlin.native.cocoapods)
  id("app.cash.sqldelight")
}

archivesBaseName = 'sample-common'

sqldelight {
  HockeyDb {
    packageName = "com.example.sqldelight.hockey"
  }
  linkSqlite = true
}

version = 1.0

kotlin {
  // Configure common.
  sourceSets.commonMain.dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation 'app.cash.sqldelight:primitive-adapters'
  }
  sourceSets.commonTest.dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-test-common'
    implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
  }

  // Configure jvm.
  jvm()
  sourceSets.jvmTest.dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-test-junit'
    implementation "app.cash.sqldelight:sqlite-driver"
  }

  // Configure web.
  js {
    useCommonJs()
    browser {
      testTask {
        useMocha {
          timeout = "5s"
        }
      }
    }
  }
  sourceSets.jsMain.dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
    implementation npm('dateformat', '3.0.3')
  }
  sourceSets.jsTest.dependencies {
    implementation "org.jetbrains.kotlin:kotlin-test-js"
    implementation deps.kotlin.coroutines.core
    implementation "app.cash.sqldelight:sqljs-driver"
  }

  // Configure iOS.
  def sdkName = System.getenv("SDK_NAME")
  if (sdkName != null && sdkName.startsWith("iphoneos")) {
    iosArm64("ios")
  } else {
    iosX64("ios")
  }
  sourceSets.iosMain.dependencies {
    implementation "app.cash.sqldelight:native-driver"
  }

  cocoapods {
    summary = "Common core for SQLDelight sample."
    homepage = "https://github.com/cashapp/sqldelight/tree/master/sample/common"
  }
}

afterEvaluate {
  tasks.named("compileCommonMainKotlinMetadata").configure {
    // https://youtrack.jetbrains.com/issue/KT-51293
    enabled = false
  }
}