import org.jetbrains.kotlin.konan.target.HostManager

plugins {
  alias(libs.plugins.kotlin.multiplatform)
  alias(libs.plugins.publish)
  alias(libs.plugins.dokka)
}

kotlin {
  iosX64()
  iosArm64()
  tvosX64()
  tvosArm64()
  watchosX64()
  watchosArm32()
  watchosArm64()
  macosX64()
  mingwX64()
  linuxX64()
  macosArm64()
  iosSimulatorArm64()
  watchosSimulatorArm64()
  tvosSimulatorArm64()

  targetHierarchy.default { target ->
    target.group("native") {
      it.group("nativeLinuxLike") {
        it.withLinux()
        it.withApple()
      }
    }
  }

  sourceSets {
    commonMain {
      dependencies {
        api projects.runtime
      }
    }
    commonTest {
      dependencies {
        implementation libs.kotlin.test
        implementation libs.testhelp
      }
    }
    nativeMain {
      dependencies {
                api libs.sqliter
            }
        }
        nativeTest {
            dependencies {
                implementation projects.drivers.driverTest
            }
        }
    }

    configure([targets.iosX64, targets.iosArm64, targets.tvosX64, targets.tvosArm64, targets.watchosX64, targets.watchosArm32, targets.watchosArm64, targets.macosX64, targets.macosArm64, targets.iosSimulatorArm64, targets.watchosSimulatorArm64, targets.tvosSimulatorArm64]) {
        binaries.configureEach {
            linkerOpts += ["-lsqlite3"]
        }
    }

    configure([targets.linuxX64]) {
        binaries.configureEach {
            linkerOpts += ["-L$rootDir/libs/linux".toString(), "-lsqlite3"]
        }
    }

    configure([targets.mingwX64]) {
        binaries.configureEach {
            linkerOpts += ["-Lc:\\msys64\\mingw64\\lib", "-L$rootDir\\libs\\windows".toString(), "-lsqlite3"]
        }
    }
}

//linking fails for the linux test build if not built on a linux host
//ensure the tests and linking for them is only done on linux hosts
tasks.named("linuxX64Test") { enabled = HostManager.hostIsLinux }
tasks.named("linkDebugTestLinuxX64") { enabled = HostManager.hostIsLinux }

tasks.named("mingwX64Test") { enabled = HostManager.hostIsMingw }
tasks.named("linkDebugTestMingwX64") { enabled = HostManager.hostIsMingw }

apply from: "$rootDir/gradle/gradle-mvn-push.gradle"
