apply plugin: 'org.jetbrains.kotlin.multiplatform'

kotlin {
  sourceSets {
    commonMain {
      dependencies {
        api project (':drivers:native-driver')
      }
    }
  }

  targets {
    targetFromPreset(presets.iosX64, 'iosX64')
    targetFromPreset(presets.iosArm32, 'iosArm32')
    targetFromPreset(presets.iosArm64, 'iosArm64')
  }

  configure([targets.iosX64, targets.iosArm32, targets.iosArm64]) {
    compilations.test {
      extraOpts("-linker-options", "-lsqlite3")
    }
  }
}

apply from: "$rootDir/gradle/gradle-mvn-mpp-push.gradle"

publishing {
  publications.all {
    // Rewrite all artifacts from using the project name to just 'runtime'.
    artifactId = artifactId.replace(project.name, 'ios-driver')
  }
}

afterEvaluate {
  // Alias the task names we use elsewhere to the new task names.
  tasks.register('install') {
    dependsOn('publishKotlinMultiplatformPublicationToMavenLocal')
  }
  tasks.register('installLocally') {
    dependsOn 'publishMetadataPublicationToTestRepository'
    dependsOn 'publishKotlinMultiplatformPublicationToTestRepository'
    dependsOn 'publishIosX64PublicationToTestRepository'
    dependsOn 'publishIosArm32PublicationToTestRepository'
    dependsOn 'publishIosArm64PublicationToTestRepository'
  }
  // NOTE: We do not alias uploadArchives because CI runs it on Linux and we only want to run it on Mac OS.
  //tasks.register('uploadArchives').dependsOn('publishKotlinMultiplatformPublicationToMavenRepository')
}