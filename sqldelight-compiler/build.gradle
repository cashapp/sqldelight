plugins {
  alias(libs.plugins.kotlin.jvm)
  alias(libs.plugins.grammarKitComposer)
  alias(libs.plugins.publish)
  alias(libs.plugins.dokka)
  id("app.cash.sqldelight.toolchain.compiler")
}

tasks.named('test') {
  testLogging {
    events "passed", "skipped", "failed"
    exceptionFormat "full"
    showExceptions true
    showStackTraces true
    showCauses true
  }
}

sourceSets {
  main.java.srcDir "gen"
}

grammarKit {
  intellijRelease.set(libs.versions.idea)
}

dependencies {
  api libs.sqlPsi
  api projects.sqldelightCompiler.dialect

  implementation libs.kotlinPoet
  implementation libs.jgrapht

  compileOnly libs.sqliteJdbc
  compileOnly libs.intellij.testFramework

  testImplementation libs.burst
  testImplementation libs.sqliteJdbc
  testImplementation (libs.intellij.testFramework) {
    exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-core"
  }
  testImplementation libs.kotlin.coroutines.core
  testImplementation libs.kotlin.test.junit
  testImplementation libs.truth
  testImplementation projects.testUtil
  testImplementation projects.dialects.hsql
  testImplementation projects.dialects.mysql
  testImplementation projects.dialects.postgresql
  testImplementation projects.dialects.sqlite318
  testImplementation projects.dialects.sqlite324
  testImplementation projects.dialects.sqlite325
  testImplementation projects.dialects.sqlite330
  testImplementation projects.dialects.sqlite333
  testImplementation projects.dialects.sqlite335
  testImplementation projects.dialects.sqlite338
}

tasks.register('pluginVersion') {
  def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
      commandLine 'git', 'rev-parse', '--short', 'HEAD'
      standardOutput = stdout
    }
    return stdout.toString().trim()
  }

  def outputDir = file("gen")

  inputs.property 'version', version
  outputs.dir outputDir

  def versionFile = file("$outputDir/app.cash.sqldelight/Version.kt")

  doLast {
    versionFile.parentFile.mkdirs()
    versionFile.text = """// Generated file. Do not edit!
package app.cash.sqldelight

val VERSION = "${version}"
val GIT_SHA = "${getGitHash}"
"""
  }
}

apply from: "$rootDir/gradle/gradle-mvn-push.gradle"

tasks.named('compileKotlin') { dependsOn('pluginVersion') }
