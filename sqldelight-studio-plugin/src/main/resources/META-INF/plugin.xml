<idea-plugin version="2">
  <id>com.squareup.sqldelight</id>
  <name>SQLDelight</name>
  <category>Custom Languages</category>
  <vendor url="https://github.com/square">Square, Inc.</vendor>
  <idea-version
      since-build="134.549"
      until-build="145.*"
  />
  <depends>com.intellij.modules.lang</depends>
  <depends>org.jetbrains.android</depends>
  <depends>org.jetbrains.plugins.gradle</depends>

  <description><![CDATA[
      Android sqlite interface generator.<br>
      Generates interfaces for implementing sqlite tables, <br>
      Mapping from a cursor and creating ContentValues.
    ]]></description>

  <change-notes><![CDATA[
  <p>
  0.4.4
  <ul>
  <li>New: Native support for shorts as column java type</li>
  <li>New: Javadoc on generated mappers and factory methods</li>
  <li>Fix: group_concat and nullif functions have proper nullability</li>
  <li>Fix: Compatibility with Android Studio 2.2-alpha</li>
  <li>Fix: WITH RECURSIVE no longer crashes plugin</li>
  </ul>
  </p>
  <p>
  0.4.3
  <ul>
  <li>New: Compilation errors link to source file.</li>
  <li>New: Right-click to copy SQLDelight code as valid SQLite.</li>
  <li>New: Javadoc on named statements will appear on generated Strings.</li>
  <li>Fix: Generated view models include nullability annotations.</li>
  <li>Fix: Generated code from unions has proper type and nullability to support all possible columns.</li>
  <li>Fix: sum and round SQLite functions have proper type in generated code.</li>
  <li>Fix: CAST's, inner selects bugfixes.</li>
  <li>Fix: Autocomplete in CREATE TABLE statements.</li>
  <li>Fix: SQLite keywords can be used in packages.</li>
  </ul>
  </p>
  <p>
  0.4.2
  <ul>
  <li>New: Marshal can be created from the factory.</li>
  <li>Fix: IntelliJ plugin generates factory methods with proper generic order.</li>
  <li>Fix: Function names can use any casing.</li>
  </ul>
  </p>
  <p>
  0.4.1
  <ul>
  <li>Fix: IntelliJ plugin generates classes with proper generic order.</li>
  <li>Fix: Column definitions can use any casing.</li>
  </ul>
  </p>
  <p>
  0.4.0
  <ul>
  <li>New: Mappers are generated per query instead of per table.</li>
  <li>New: Java types can be imported in .sq files.</li>
  <li>New: SQLite functions are validated.</li>
  <li>Fix: Remove duplicate errors.</li>
  <li>Fix: Uppercase column names and java keyword column names do not error.</li>
  </ul>
  </p>
]]></change-notes>

  <module-components>
    <component>
      <implementation-class>com.squareup.sqldelight.intellij.SqlDelightModuleComponent</implementation-class>
    </component>
  </module-components>

  <extensions defaultExtensionNs="com.intellij">
    <compileServer.plugin classpath="sqldelight-jps-plugin.jar"/>

    <fileTypeFactory implementation="com.squareup.sqldelight.intellij.lang.SqliteFileTypeFactory"/>
    <externalAnnotator language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDocumentAnnotator"/>
    <gotoDeclarationHandler
        implementation="com.squareup.sqldelight.intellij.lang.SqliteGotoDeclarationHandler"/>
    <postStartupActivity implementation="com.squareup.sqldelight.intellij.SqlDelightStartupActivity"/>
    <errorHandler implementation="com.squareup.sqldelight.intellij.SqlDelightErrorHandler" />

    <completion.contributor language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.ClassCompletionContributor"/>
    <completion.contributor language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightCompletionContributor"/>
    <findUsagesHandlerFactory
        implementation="com.squareup.sqldelight.intellij.lang.SqliteFindUsagesHandlerFactory"/>
    <annotator language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.psi.ClassNameElementAnnotator" />

    <lang.findUsagesProvider
        implementationClass="com.squareup.sqldelight.intellij.lang.SqliteFindUsagesProvider"
        language="Sqlite"/>
    <lang.fileViewProviderFactory language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightFileViewProviderFactory"/>
    <lang.syntaxHighlighterFactory key="SqliteSyntaxHighlighter"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqliteSyntaxHighlighterFactory"/>
    <lang.parserDefinition language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqliteParserDefinition"/>
    <lang.ast.factory language='Sqlite'
        implementationClass="com.squareup.sqldelight.intellij.lang.SqliteASTFactory"/>
    <lang.braceMatcher language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlitePairedBraceMatcher"/>
    <lang.quoteHandler language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqliteTokenSetQuoteHandler"/>
    <lang.commenter language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightCommenter"/>
    <lang.psiStructureViewFactory language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightStructureViewFactory"/>
    <lang.formatter language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.formatter.SqlDelightFormattingModelBuilder"/>
  </extensions>

  <actions>
    <action id="SQDelight.CopyAsSqlite" class="com.squareup.sqldelight.intellij.actions.CopyAsSqliteAction" text="Copy as SQLite">
      <add-to-group group-id="CutCopyPasteGroup" anchor="after" relative-to-action="$Copy"/>
      <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="$Copy"/>
      <keyboard-shortcut keymap="Mac OS X" first-keystroke="control shift C"/>
    </action>
  </actions>
</idea-plugin>
