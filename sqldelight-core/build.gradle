buildscript {
  repositories {
    maven { url 'https://jitpack.io' }
  }

  dependencies {
    classpath "com.github.hurricup:gradle-grammar-kit-plugin:2017.1.1"
  }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.grammarkit'
grammarKit {
  grammarKitRelease = '1.5.2'
}

targetCompatibility = JavaVersion.VERSION_1_7
sourceCompatibility = JavaVersion.VERSION_1_7

sourceSets {
  main.java.srcDir "src/generated/kotlin"
}

dependencies {
  implementation dep.kotlinPoet
  implementation dep.kotlinStdLib
  implementation dep.sqlitePsi

  compileOnly dep.intellijCore

  testImplementation dep.intellijCore
  testImplementation dep.junit
  testImplementation dep.truth
}

task pluginVersion {
  def outputDir = file("src/generated/kotlin")

  inputs.property 'version', version
  outputs.dir outputDir

  doLast {
    def versionFile = file("$outputDir/com/squareup/sqldelight/Version.kt")
    versionFile.parentFile.mkdirs()
    versionFile.text = """// Generated file. Do not edit!
package com.squareup.sqldelight

val VERSION = "${project.version}"
"""
  }
}

import org.jetbrains.grammarkit.tasks.GenerateParser

task generateSqlDelightParser(type: GenerateParser) {
  source "src/main/grammars/sqldelight.bnf"
  targetRoot = 'src/generated/kotlin/'
  pathToParser '/com/squareup/sqldelight/core/parser/SampleParser.java'
  pathToPsiRoot '/com/squareup/sqldelight/core/psi'
  purgeOldFiles = true
}

tasks.getByName('compileKotlin').dependsOn('pluginVersion')
tasks.getByName('compileKotlin').dependsOn('generateSqlDelightParser')

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
