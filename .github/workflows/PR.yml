name: Test

on:
  pull_request:
    # Ensure paths-ignore match paths in PR-skip.yml
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - 'mkdocs.yml'

jobs:
  spotless:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3.13.0
        with:
          distribution: 'zulu'
          java-version-file: .github/workflows/.ci-java-version
      - run: ./gradlew spotlessCheck

  build:
    strategy:
      # Ensure any changes to the matrix are also made in PR-skip.yml
      matrix:
        os: [ macOS-latest, windows-latest, ubuntu-latest ]
        job: [ instrumentation, test, gradle-plugin-tests ]
        exclude:
          - os: windows-latest
            job: instrumentation
          - os: windows-latest
            job: gradle-plugin-tests
          - os: ubuntu-latest
            job: gradle-plugin-tests

    runs-on: ${{matrix.os}}
    permissions:
      contents: read

    steps:
      - name: Free Disk Space (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: false
          large-packages: false
    
      - name: Checkout the repo
        uses: actions/checkout@v4
      # https://github.com/gradle/gradle-build-action/issues/561
      - name: Create Gradle files
        run: |
          cd ~
          mkdir -p .gradle/ && touch .gradle/gradle.properties
      - name: Set up Java
        id: setup-java
        uses: actions/setup-java@v3.13.0
        with:
          distribution: 'zulu'
          java-version-file: .github/workflows/.ci-java-version
      - name: Setup Gradle Java installations paths
        run: |
          cd ~/.gradle
          echo "org.gradle.java.installations.paths=${{ steps.setup-java.outputs.path }}" >> gradle.properties
      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

      # Linux tests
      - name: Run gradle tests
        if: matrix.os == 'ubuntu-latest' && matrix.job == 'test'
        run: |
          ./gradlew build -x :sqldelight-idea-plugin:build -x :sqldelight-gradle-plugin:test --stacktrace -x linuxX64Test
      - name: Run gradle plugin tests
        if: matrix.os == 'macOS-latest' && matrix.job == 'gradle-plugin-tests'
        run: ./gradlew :sqldelight-gradle-plugin:test :sqldelight-gradle-plugin:grammarkitTest --parallel

      - name: Run the IntelliJ plugin
        if: matrix.os == 'ubuntu-latest' && matrix.job == 'instrumentation'
        run: ./gradlew :sqldelight-idea-plugin:build --stacktrace
      - name: Verify IntelliJ plugin
        if: matrix.os == 'ubuntu-latest' && matrix.job == 'instrumentation'
        run: ./gradlew :sqldelight-idea-plugin:runPluginVerifier

      # Windows tests
      - name: Run windows tests
        if: matrix.os == 'windows-latest'
        run: ./gradlew mingwX64Test sqldelight-idea-plugin:check --stacktrace

      - name: Run linux tests
        if: matrix.os == 'ubuntu-latest'
        # not parallel otherwise NativeTransacterTest fails.
        run: ./gradlew linuxX64Test --no-parallel

      # android tests
      - name: Run instrumentation tests
        if: matrix.os == 'macOS-latest' && matrix.job == 'instrumentation'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86_64
          script: ./gradlew connectedCheck :sqldelight-gradle-plugin:instrumentationTest --stacktrace --parallel

      # ios tests
      - name: Run ios tests
        if: matrix.os == 'macOS-latest' && matrix.job == 'test'
        run: ./gradlew iosX64Test --stacktrace --parallel

      # Build the samples
      - name: Build the mobile sample
        if: matrix.os == 'macOS-latest' && matrix.job == 'test'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build --stacktrace --parallel
          build-root-directory: sample

      - name: Build the web sample
        if: matrix.os == 'macOS-latest' && matrix.job == 'test'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: kotlinUpgradeYarnLock build --stacktrace --parallel
          build-root-directory: sample-web

env:
  GRADLE_OPTS: -Dorg.gradle.caching=true
