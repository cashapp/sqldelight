name: Publish the mkdocs to GitHub Pages

on:
  push:
    branches: [master]
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: "docs"
  cancel-in-progress: false

jobs:
  deploy-website:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}  

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
      - uses: actions/configure-pages@v2  
      - name: Set up JDK 17
        uses: actions/setup-java@v3.9.0
        with:
          distribution: 'zulu'
          java-version: 17
      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11 # See the pinned version in renovate.json too

      - name: Get Docs Version
        run: cat gradle.properties | grep --color=never VERSION_NAME >> $GITHUB_OUTPUT
        id: version

      - name: Prep mkdocs
        run: .github/workflows/prepare_mkdocs.sh ${{ steps.version.outputs.VERSION_NAME }}

      - name: Build mkdocs
        run: |
          pip3 install --no-deps -r .github/workflows/requirements.txt
          mkdocs build

      - name: Configure git for mike
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git fetch origin gh-pages --depth=1

      - name: Deploy SNAPSHOT Docs with mike ðŸ—¿
        if: ${{ success() && contains(steps.version.outputs.VERSION_NAME, 'SNAPSHOT') }}
        run: mike deploy -u --push ${{ steps.version.outputs.VERSION_NAME }} snapshot

      - name: Deploy Docs with mike ðŸš€
        if: ${{ success() && !contains(steps.version.outputs.VERSION_NAME , 'SNAPSHOT') }}
        run: mike deploy -u --push ${{ steps.version.outputs.VERSION_NAME }} latest

env:
  GRADLE_OPTS: -Dorg.gradle.parallel=true
