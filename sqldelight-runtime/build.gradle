apply plugin: 'org.jetbrains.kotlin.multiplatform'

archivesBaseName = 'sqldelight-runtime'

// TODO work around for https://youtrack.jetbrains.com/issue/KT-27170
configurations {
  compileClasspath
}

kotlin {
  sourceSets {
    commonMain {
      dependencies {
        implementation deps.kotlin.stdlib.common
        implementation deps.stately
      }
    }
    commonTest {
      dependencies {
        implementation deps.kotlin.test.common
        implementation deps.kotlin.test.commonAnnotations
      }
    }
    jvmMain {
      dependencies {
        implementation deps.kotlin.stdlib.jdk
      }
    }
    jvmTest {
      dependencies {
        implementation deps.kotlin.test.junit
        implementation project(':drivers:sqlite-driver')
      }
    }
    jsMain {
      dependencies {
        implementation deps.kotlin.stdlib.js
      }
    }
    jsTest {
      dependencies {
        implementation deps.kotlin.test.js
      }
    }
    nativeMain {
    }
    nativeTest {
    }
  }

  targets {
    fromPreset(presets.jvm, 'jvm')
    fromPreset(presets.js, 'js')
    fromPreset(presets.iosX64, 'iosX64')
    fromPreset(presets.iosArm64, 'iosArm64')
  }

  configure([targets.iosX64, targets.iosArm64]) {
    compilations.main.source(sourceSets.nativeMain)
    compilations.test.source(sourceSets.nativeTest)
  }
}

afterEvaluate {
  // Alias the task names we use elsewhere to the new task names.
  tasks.create('install').dependsOn('publishKotlinMultiplatformPublicationToMavenLocal')
  tasks.create('installLocally') {
    dependsOn 'publishKotlinMultiplatformPublicationToTestRepository'
    dependsOn 'publishJvmPublicationToTestRepository'
    dependsOn 'publishJsPublicationToTestRepository'
  }
  tasks.create('installIosLocally') {
    dependsOn 'publishKotlinMultiplatformPublicationToTestRepository'
    dependsOn 'publishIosArm64PublicationToTestRepository'
    dependsOn 'publishIosX64PublicationToTestRepository'
  }
  // NOTE: We do not alias uploadArchives because CI runs it on Linux and we only want to run it on Mac OS.
  //tasks.create('uploadArchives').dependsOn('publishKotlinMultiplatformPublicationToMavenRepository')
}

apply from: "$rootDir/gradle/gradle-mvn-mpp-push.gradle"

publishing {
  publications.all {
    // Rewrite all artifacts from using the project name to just 'runtime'.
    artifactId = artifactId.replace(project.name, 'runtime')
  }
}